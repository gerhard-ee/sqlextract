package ingest

import (
	"fmt"
)

type PostgresIngester struct{}

func NewPostgresIngester() Ingester {
	return &PostgresIngester{}
}

func (i *PostgresIngester) GenerateCSVIngestScript(sourcePath, targetTable string) (string, error) {
	script := fmt.Sprintf(`-- PostgreSQL CSV Ingestion Script
-- Generated by SQLExtract
-- Target Table: %s
-- Source File: %s

-- Create a temporary table for staging
CREATE TEMP TABLE temp_import (
    LIKE %s INCLUDING DEFAULTS
);

-- Copy data from CSV to temporary table
COPY temp_import
FROM '%s'
WITH (
    FORMAT csv,
    HEADER true,
    DELIMITER ',',
    NULL 'NULL',
    QUOTE '"',
    ESCAPE '"'
);

-- Insert data from temporary table to target table
INSERT INTO %s
SELECT * FROM temp_import
ON CONFLICT DO NOTHING;

-- Clean up
DROP TABLE temp_import;`, targetTable, sourcePath, targetTable, sourcePath, targetTable)

	return script, nil
}

func (i *PostgresIngester) GenerateParquetIngestScript(sourcePath, targetTable string) (string, error) {
	script := fmt.Sprintf(`-- PostgreSQL Parquet Ingestion Script
-- Generated by SQLExtract
-- Target Table: %s
-- Source File: %s

-- Note: PostgreSQL does not natively support Parquet files.
-- You will need to use an external tool like pg_parquet or
-- convert the Parquet file to CSV first.

-- Example using pg_parquet (if installed):
-- SELECT pg_parquet_import('%s', '%s');

-- Alternative: Convert Parquet to CSV first using a tool like
-- parquet-tools or Apache Arrow, then use the CSV ingestion script.`, targetTable, sourcePath, sourcePath, targetTable)

	return script, nil
}
