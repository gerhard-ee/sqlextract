package ingest

import (
	"fmt"
)

type MSSQLIngester struct{}

func NewMSSQLIngester() Ingester {
	return &MSSQLIngester{}
}

func (i *MSSQLIngester) GenerateCSVIngestScript(sourcePath, targetTable string) (string, error) {
	script := fmt.Sprintf(`-- MSSQL CSV Ingestion Script
-- Generated by SQLExtract
-- Target Table: %s
-- Source File: %s

-- Create a temporary table for staging
CREATE TABLE #temp_import (
    LIKE %s
);

-- Bulk insert data from CSV to temporary table
BULK INSERT #temp_import
FROM '%s'
WITH (
    FORMAT = 'CSV',
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    ROWTERMINATOR = '\\n',
    NULLIF = 'NULL',
    CODEPAGE = '65001'
);

-- Insert data from temporary table to target table
INSERT INTO %s
SELECT * FROM #temp_import;

-- Clean up
DROP TABLE #temp_import;`, targetTable, sourcePath, targetTable, sourcePath, targetTable)

	return script, nil
}

func (i *MSSQLIngester) GenerateParquetIngestScript(sourcePath, targetTable string) (string, error) {
	script := fmt.Sprintf(`-- MSSQL Parquet Ingestion Script
-- Generated by SQLExtract
-- Target Table: %s
-- Source File: %s

-- Note: MSSQL does not natively support Parquet files.
-- You will need to use an external tool like Apache Arrow
-- or convert the Parquet file to CSV first.

-- Example using Apache Arrow (if installed):
-- EXEC sp_execute_external_script
--     @language = N'Python',
--     @script = N'
--         import pandas as pd
--         df = pd.read_parquet("%s")
--         df.to_csv("%s.csv", index=False)
--     ';

-- Then use the CSV ingestion script with the generated CSV file.`, targetTable, sourcePath, sourcePath, sourcePath)

	return script, nil
}
