name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ['1.21']

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go }}

    - name: Check out code
      uses: actions/checkout@v4

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: |
        if [ "${{ runner.os }}" = "macOS" ]; then
          go test -v -timeout 30s ./...
        else
          go test -v -timeout 30s -tags=!darwin ./...
        fi

    - name: Generate coverage
      run: |
        if [ "${{ runner.os }}" = "macOS" ]; then
          go test -v -timeout 30s -coverprofile=coverage.out ./...
        else
          go test -v -timeout 30s -coverprofile=coverage.out -tags=!darwin ./...
        fi

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        fail-ci: false

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.7'

      - name: Verify file structure
        run: |
          pwd
          ls -la
          ls -la cmd/sqlextract/

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 